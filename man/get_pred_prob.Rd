% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_pred_prob.R
\name{get_pred_prob}
\alias{get_pred_prob}
\title{function to extract the predictive probabilities for a new data matrix}
\usage{
get_pred_prob(fit, X, Burn_in = NULL)
}
\arguments{
\item{fit}{and LCVA.pred object}

\item{X}{a matrix of dimension n by p, in the same format as the input to LCVA.pred}

\item{Burn_in}{number of iterations to discard}
}
\value{
an Nitr x N x C matrix of posterior draws of P(Y | X)
}
\description{
function to extract the predictive probabilities for a new data matrix
}
\examples{
\dontrun{
data(simLCM)
out.train <- LCVA.train(X = simLCM$X_train, 
				Y = simLCM$Y_train, Domain = simLCM$G_train, 
             causes.table = simLCM$causes.table, 
             domains.table = simLCM$domains.table,
           K = 4, model = "M", Nitr = 400, nchain = 5, seed = 1234)

out <- LCVA.pred(fit = out.train, X_test = simLCM$X_test,  
                 model = "D", 
                 alpha_pi = 1, alpha_eta = .1, 
                 Burn_in_train = 200, Nitr = 200)
out1 <- LCVA.pred(fit = out.train, X_test = simLCM$X_test,  
                 model = "D", 
                 alpha_pi = 1, alpha_eta = .1, 
                 Burn_in_train = 200, Nitr = 200, return_likelihood = TRUE)
Yhat <- get_assignment(out$Y_test, Burn_in = 100)
# Posterior predictive prob is an Nitr * N * C array 
prob <- get_pred_prob(out, simLCM$X_test, Burn_in = 100)
prob_mean <- apply(prob, c(2, 3), mean)
Yhat_pred <- apply(prob_mean, 1, which.max)  
# The two should be quite similar
table(Yhat, Yhat_pred)

}
}
